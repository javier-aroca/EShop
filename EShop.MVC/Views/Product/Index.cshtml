@using EShop.MVC.Models
@model IEnumerable<ProductList>

@{
    ViewBag.Title = "Index";
}



<h2>Productos Disponibles</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
<table class="table">
    <tr>
        <th>
            <p>Reservar productos</p>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stock)
        </th>
        @*        <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>*@
    </tr>



    @foreach (var item in Model)
    {
        <tr>
            <td>
                @*botón que añade un producto al carrito del cliente*@
                @*<input type="button"
                    value="Añadir al carrito"
                    onclick="alert('Producto añadido al carrito'); location.href='@Url.Action("AddToCartView", "Product", new { idProduct = item.Id } )'" />*@


                <input type="button"
                       value="Añadir al carrito"
                       onclick="addToCart(@Html.DisplayFor(modelItem => item.Id));" />
                @*//linkText, actionName, controllerName, routeValues, htmlAttributes*@
                @*@Html.ActionLink("AñadirCarrito", "AddToCart", "ShoppingCart", new { id = item.Id }, "Index")*@
                @* <a href="@Url.Action("AddToCart", "AddToCart", new { id = item.Id , url="Index" })">

                    </a>*@


                @*@Html.ActionLink("AddToCart", "AddToCart", "ShoppingCart", new { idProduct = item.Id }))*@
            </td>


            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            @*    <td>
                    @Html.DisplayFor(modelItem => item.Image)
                </td>*@
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |*@
                @Html.ActionLink("Detalle", "Details", new { id = item.Id })
                @*@Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
            </td>
        </tr>
    }

</table>

<script>
    function addToCart(idProduct)
    {
        //debugger;
        @*var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            debugger;
            if (this.readyState == 4 && this.status == 200) {
                alert('Producto añadido al carrito');
            }
            else
            {
                alert('Hay algun error de conexión con el servidor');
            }
        };
        xhttp.open("POST", "AddToCart?idProduct=" + idProduct, true);
        xhttp.send();*@

        debugger;
        $.ajax({
            type: "POST", // la variable type guarda el tipo de la peticion GET,POST,..
            url: "/Product/AddToCart", //url guarda la ruta hacia donde se hace la peticion
            data: { idProduct: idProduct }, // data recibe un objeto con la informacion que se enviara al servidor
            success: function (datos) { //success es una funcion que se utiliza si el servidor retorna informacion
                //console.log(datos.promedio)
                @*alert('Producto añadido al carrito');*@
                location.href="/Product/Index"
            }//,
            //dataType: dataType // El tipo de datos esperados del servidor. Valor predeterminado: Intelligent Guess (xml, json, script, text, html).
        })
    }


</script>

@*<p>
        @Html.ActionLink("Create New", "Create")
        @Html.
    </p>*@
